const { SmartBuffer } = require("smart-buffer");
const Handler = require("../../Utils/Handler");
const { opCode } = require("../../Utils/opcode");
const packetHandler = require("../../Utils/packetHandler");
const character = require("../Character/Util/character");

class GameHandler extends Handler {
  constructor(session) {
    super(session);
  }

  handleClientEnterGameServer() {
    console.log("클라이언트 접근 감지!");
    const buf = SmartBuffer.fromBuffer(this._data);
    const AccountID = buf.readUInt32LE();
    const CharID = buf.readUInt32LE();
    const Unknown1 = buf.readUInt32LE();
    const Unknown2 = buf.readUInt32LE();
    const Unknown3 = buf.readUInt8();
    const Unknown4 = buf.readBigUInt64LE();

    this._session.initSession(CharID, () => {
      console.log("클라이언트 Session Init!");
      this.sendTimestamp(() => {
        console.log("클라이언트 SendTimestamp!");
        this.eventBooster(() => {
          this.sendServerVersion(() => {
            console.log("클라이언트 SendServerVersion!");
            //this.sendServerUnknown1();
            this.sendServerSpritWorker();
          });
        });
      });
    });
  }

  eventBooster(cb) {
    this.write("0x2A20", Buffer.from("00", "hex"), () => {
      cb();
    });
  }

  skillPoint() {
    return new SmartBuffer().writeUInt32LE(0).writeUInt16LE(0).writeUInt16LE(0).writeUInt16LE(3).writeUInt8(0);
  }

  handleCharacterGesture() {
    const buf = new SmartBuffer();
    for (let i = 0; i < 6; i++) {
      buf.writeUInt32LE(7000 + i);
    }
    const enc = packetHandler.encrypt({ opcode: "0x2303", data: buf.toBuffer() });
    this._session.getClient().write(enc, () => {
      this.handleTest();
    });
  }

  handleSkillTest() {
    const buf = new SmartBuffer();
    buf.writeUInt32LE(0);
    buf.writeUInt16LE(0); //사용 스킬 포인트
    buf.writeUInt16LE(0); //현재 스킬 포인트
    buf.writeUInt16LE(3);
    buf.writeUInt8(12); //가지고 있는 스킬 개수

    buf.writeUInt32LE(12040011);
    buf.writeUInt32LE(0);
    buf.writeUInt32LE(12070011);
    buf.writeUInt32LE(0);
    buf.writeUInt32LE(12000211);
    buf.writeUInt32LE(0);
    buf.writeUInt32LE(12100011);
    buf.writeUInt32LE(0);
    buf.writeUInt32LE(111);
    buf.writeUInt32LE(0);
    buf.writeUInt32LE(11160111);
    buf.writeUInt32LE(0);
    buf.writeUInt32LE(11);
    buf.writeUInt32LE(0);
    buf.writeUInt32LE(12090011);
    buf.writeUInt32LE(0);
    buf.writeUInt32LE(12080011);
    buf.writeUInt32LE(0);
    buf.writeUInt32LE(12110011);
    buf.writeUInt32LE(0);
    buf.writeUInt32LE(12000411);
    buf.writeUInt32LE(0);
    buf.writeUInt32LE(12001211);
    buf.writeUInt32LE(0);

    buf.writeUInt8(6);

    for (let i = 0; i < 6; i++) {
      buf.writeUInt16LE(i);
      for (let l = 0; l < 3; l++) {
        buf.writeUInt32LE(0);
      }
    }
    buf.writeUInt32LE(0);

    //const enc = packetHandler.encrypt({ opcode: "0x0670", data: buf.toBuffer() });
    this.write("0x0670", buf.toBuffer());
  }

  handleCharacterInfo() {
    const buf = SmartBuffer.fromBuffer(this._data); //buf.readUInt32LE()
    const char = character.getCharacterData(this._session.character, true);
    this._session.getClient().write(packetHandler.encrypt({ opcode: opCode.character.ServerResCharacterInfo, data: char }));
    this.handleSkillTest();
    this.handleCharacterGesture();
    this.write("0x0330", Buffer.alloc(0));
  }

  handleTest() {
    const buf = Buffer.from(
      "",
      "hex"
    );

    this.writeRaw(buf, () => {
      const buf2 = Buffer.from("02003300014219d4543b0b136010603a4399111e09f854603b0b60370b7df647a5fdcef489bfa533cc633ada673b0b133b0b60", "hex");
      this.writeRaw(buf2, () => {
        const buf3 = Buffer.from(
          "0200b80b016853ad603b0bc8cffb68cc3862000a603b8893ac0b603b0b39092c466239471d1f60bbb516ae0b603b0b64c18c4827f1e7130160bb0ef9ae0b603b0b70c18c4813f1e7130160bb40feae0b603b0b9a994c50c1a9270b08603b1af5ae0b603b0bbaefbe51e1dfd50a0e60bbb516ae0b603b0bbcefbe51e7dfd50a0e603bc112ae0b603b0bbdefbe51e6dfd50a0e603b4bc2ae0b603b0b4f60bc51b4dfd50a0e603b3071ae0b603b0b125ddc51496db70a0460bba3fbae0b603b0bf193ed51aaa3860a0a60bbd977ae0b603b0bf293ed51aba3860a0160bb7311ae0b603b0be24d1a5bb97d71000a60bbe26fae0b603b0bc44d1a5b9f7d710001603b3071ae0b603b0bcf4d1a5b947d71000160bb7311ae0b603b0bd04d1a5b8b7d71000e60bb7311ae0b603b0b3a4c1a5b617c71000a603b1af5ae0b603b0be5c0245b9bf04f0009603bfe6bae0b603b0b29cd5c18bbf04f000a603b0764ae0b603b0b2acd5c18953f0f250a603bd696af0b603b0b2bcd5c1815c067240a603bd696af0b603b0b2ccd5c18956ac0240a603bd696af0b603b0b2dcd5c1815f3581b0a603bd696af0b603b0b507e5318b8f04f000a603b362bae0b603b0b517e5318f4f04f000e60bb852cae0b603b0b547e5318e8f04f001f60bb852cae0b603b0b557e5318e9f04f001f60bb3a2fae0b603b0b31a853189bf74f000a60bb9ac3ae0b603b0b32a85318b8dfd50a0e60bbdcc8ae0b603b0b33a85318d200cf140a60bb71cbae0b603b0b34a85318947d71000160bbdcc8ae0b603b0b35a853189951b40a0960bb16ceae0b603b0b39a853188b7d71000360bb71cbae0b603b0b45d66d18b4dfd50a0160bb60fbad0b603b0b4dd66d1815365f000060bb91c8ad0b603b0b4ed66d1816365f000e60bb60fbad0b603b0b54d66d18e8f04f000860bb05fead0b603b0b2d796c18b4dfd50a0860bb5c9aad0b603b0bd0796c18b4dfd50a0e60bb5377ac0b603b0bd2796c18d200cf140e603bfb7dac0b603b0bd5796c18270950000e60bb5377ac0b603b0bd6796c18260950000a60bb5377ac0b603b0bd7796c18bedfd50a0860bb5377ac0b603b0bd8796c18a9a3860a01603ba178ac0b603b0bd9796c180cf64f000160bb5377ac0b603b0bda796c184a25471d1f60bb5377ac0b603b0bdb796c186239471d1f60bb5377ac0b603b0bdd796c18190950000a60bb5377ac0b603b0bde796c18314da3180a603ba178ac0b603b0bdf796c183952b40a0e603ba178ac0b603b0ba0796c183a52b40a0a60bb5377ac0b603b0b40b76c18b4dfd50a0e60bb495cac0b603b0b41b76c184d0950000e603b2b28ac0b603b0b44b76c18430950000360bbc526ac0b603b0b45b76c18bedfd50a0860bbc526ac0b603b0b46b76c18aadfd50a0d603b2b28ac0b603b0b47b76c18a9a3860a0160bb495cac0b603b0b48b76c18180950000160bbc526ac0b603b0b49b76c184a25471d0160bbc526ac0b603b0b4ab76c187a3d471d0e60bbc526ac0b603b0b4bb76c186239471d0160bbc526ac0b603b0b4cb76c18314da3180960bbc526ac0b603b0b4db76c18a8a3860a0860bbc526ac0b603b0b4eb76c183ea2860a0e60bbc526ac0b603b0b50b76c180c365f001f60bbc526ac0b603b0b51b76c18420950000e60bbc526ac0b603b0b53b76c180257b40a0a60bb8321ac0b603b0b7c7f6318b4dfd50a0360bbe1afac0b603b0b7d7f63184115610d0d603bd4b3ac0b603b0b467f6318a3e98b110e60bbe1afac0b603b0be07f63185829610d0a603b0581ac0b603b0be17f63185f29610d0a60bbae87ac0b603b0be27f63184429610d0a60bb12bdac0b603b0be37f6318bb29610d0a60bb12bdac0b603b0be47f6318b4dfd50a0e60bb12bdac0b603b0be57f63185a29610d1b603b0581ac0b603b0be67f6318d200cf1401603b60beac0b603b0be87f63182aa2860a0a60bb12bdac0b603b0be97f63182ba2860a0960bb12bdac0b603b0bea7f631834a2860a0160bb12bdac0b603b0beb7f631808f64f002360bbae87ac0b603b0bec7f6318d01d610d0e60bb12bdac0b603b0bed7f6318bad73b1f0960bb12bdac0b603b0bee7f6318b9d73b1f0960bb12bdac0b603b0bef7f63185e4da3180960bb12bdac0b603b0bf07f6318b8d73b1f0960bb12bdac0b603b0bf17f631893375f000960bb858fac0b603b0bf27f63180fa8270b0160bb858fac0b603b0bf37f6318f906e80a0060bb3a92ac0b603b0bf47f6318fa1da50a0e60bb3a92ac0b603b0bf57f63183f756c0e1f60bb858fac0b603b0bf67f631853756c0e1f60bb3a92ac0b603b0bf77f6318f7756c0e1f60bb858fac0b603b0bf87f63180b746c0e1f60bb858fac0b603b0be9706318522d610d0a603b2d96ac0b603b0bea706318512d610d0a603b2d96ac0b603b0beb706318532d610d0a60bb119aac0b603b0bec706318b4dfd50a03603b2d96ac0b603b0bed7063185e2d610d1b60bb119aac0b603b0bee706318d200cf140160bb0862a30b603b0bef7063185d2d610d04603b5e63a30b603b0bf07063185c2d610d0e60bb0862a30b603b0bf1706318d01d610d0e603b049eac0b603b0bf2706318d71d610d0e603b049eac0b603b0bf37063186239471d0160bb0862a30b603b0bf67063182aa2860a09603bc298ac0b603b0bf77063182ba2860a0f603bc298ac0b603b0bf870631834a2860a0e603bc298ac0b603b0bf9706318fed4b50a0860bb0862a30b603b0b107463180d21610d03603bc175a30b603b0b117463180c21610d03603bc175a30b603b0b12746318b4dfd50a0360bb4267a30b603b0b137463180821610d1b603b356ba30b603b0b14746318d200cf140160bbde71a30b603b0b167463180c51880a0a60bbde71a30b603b0b177463180351880a0a60bbde71a30b603b0b19746318d71d610d0e603bc175a30b603b0b1a74631834a2860a0160bbde71a30b603b0b1b7463184af2b32d0a60bbde71a30b603b0b1c7463184bf2b32d0960bbde71a30b603b0b1d746318a7e98b110960bbde71a30b603b0b1e746318a3e98b110e60bb4267a30b603b0b1f7463184a25471d01603bc175a30b603b0be0746318b221471d07603bc175a30b603b0bf8496318b4dfd50a0e603b6678a30b603b0bf94963182125610d0760bb6a7ca30b603b0bfa496318d200cf140160bb0f7fa30b603b0bfb4963182025610d0460bb9b49a30b603b0bfd4963182525610d0e603b6678a30b603b0bfe4963182425610d0a603b6678a30b603b0bff496318bedfd50a0860bbb579a30b603b0bc049631834a2860a0160bbb579a30b603b0bc1496318d71d610d0160bb6a7ca30b603b0bc24963184a25471d1f603bf242a30b603b0bc34963186239471d1f60bbac41a30b603b0bc4496318b8d6920a1f60bbac41a30b603b0bc54963181909500003603bf242a30b603b0bc6496318b9d73b1f0960bbac41a30b603b0bc7496318ccf04f000e603b5d40a30b603b0bc8496318b50f500009603bf242a30b603b0bc9496318f7756c0e1f60bbe646a30b603b0bca4963183f756c0e1f60bbe646a30b603b0bcb49631853756c0e1f60bbe646a30b603b0bcc4963180b746c0e1f60bbe646a30b603b0be04d6318b4dfd50a0e603be94aa30b603b0be24d6318d200cf140160bb384ca30b603b0be54d63181225610d0e603be94aa30b603b0be64d63181125610d0a603be94aa30b603b0be74d6318bedfd50a08603be94aa30b603b0be84d631834a2860a01603b8e4da30b603b0be94d6318d71d610d01603b2350a30b603b0bea4d63184a25471d1f60bbdd4ea30b603b0bed4d63181425610d0a603b2350a30b603b0bee4d63180b25610d0a603b2350a30b603b0bef4d6318b3dfd50a0e60bbdd4ea30b603b0b793b0b6092f04f000a603b617eae0b603b0b7b3b0b6090f04f000a603b617eae0b603b0b7c3b0b6097f04f000a603b617eae0b603b0b7e3b0b6093dfd50a0860bbe14cae0b603b0b94d00b56cfe0600d0a603b53d7ae0b603b0b38d70b56cfe0600d0a603b53d7ae0b603b0bdcd70b56cfe0600d0a603b53d7ae0b603b0b40d60b56cfe0600d0a603b53d7ae0b603b0b6bae1a5b309e71000a603b53d7ae0b603b0b5c7e5318eff04f000a603b043bae0b603b0b5d7e5318eef04f000a60bbb639ae0b603b0b60",
          "hex"
        );
        this.writeRaw(buf3, () => {
          const buf4 = Buffer.from(
            "0200bb0001630f0b13601060260b60f349633b0b608d49643b0b602b48653b0b607d48663b0b607d48673b0be0c248683b0b603b356d3b0b603e486e3b0b60db4b6f3b0b60f349713b78c5bb4d743bdbae9b4d753b0be0cc4e763b0bd0214d773b4ac57b4c783b0bd0214e793b0baf304e7a3b0be086497b3b0b6073497c3b0b6067497d3b0b60fd4a7e3b0b60eb4a7f3b6c06a54a403bb1fb3d4c433b0b607d49443b0b600b4a463b0b00174f4b3b6c06254a4c3b0b609b4a4f3b0200310001630f0b136010603d0bdcf14d613b0b601b4a623b0b4cd94d6a3b0b601b4a6c3b0b60d149723b0b602848733b0200130001630f0b136010603a0b608b4a4f3b0200130001630f0b136010603a0be0e24f243b0200130001630f0b136010603a0be0624e243b02001f0001630f0b1360106038ac00bd4d743bdb989c4d753b5f19324c433b02001f0001630f0b1360106038d193b04d743bdb90954d753be622374c433b0200130001630f0b136010603a0b60fb4a4f3b0200130001630f0b136010603a0bef344e7a3b0200170001662f783b200bc9510b603b0b6148507b3b0b0200250001630f0b136010603fd193ab4d743bdb508e4d753b0b6047497d3be6ca294c433b0200130001630f0b136010603a0b80194f4b3b0200170001662f783b200bd3510b603b0b6148507b3b0b0200250001630f0b136010603fd1f39b4d743bdbd8f34d753be61a214c433b0b60934a463b0200190001630f0b13601060390b146d4c613b0b146d4c6a3b0200190001630f0b13601060390bdf374e7a3b0b60d34a4f3b0200170001662f783b200b39510b603b0b6148507b3b0b0200130001630f0b136010603ae6a0244c433b0200120001637c783b200b61090b603b4b200200130001630f0b136010603a0b60c34a4f3b0200130001630f0b136010603a0b602c48733b0200170001662f783b200b03510b603b0b6148507b3b0a0200130001630f0b136010603a0b60bf497d3b0200130001630f0b136010603a0b601a48733b0200130001630f0b136010603a0b603f494f3b0200170001662f783b200b68510b603b0b6148507b3b0b0200130001630f0b136010603ae6661e4c433b0200130001630f0b136010603a0b602f494f3b",
            "hex"
          );
          this.writeRaw(buf4, () => {
            const buf5 = Buffer.from(
              "02006700016332783b200b663bda673b0b603b0a603b0b603b0b603bd9673b0b603b0b603b0b603b0b603bd3673b0b603a0b603b0b603b0b603bd5673b0b603a0b603b0b603b0b603bea673b0b603a0b603b0b603b0b603be2673b0b603b0b603b0b603b0b603b02000f0001673e0a603b0b80f60b600200150001483a00600c0b603b0b603b0b603b0b6002000b0001647f783b200b02001e0001647c868e3d0b136010603a8b73eb54603b0b60390b043bc360",
              "hex"
            );
            this.writeRaw(buf5, () => {});
          });
        });
      });
    });
  }

  handleGoCharacterInfo() {
    const buf = SmartBuffer.fromBuffer(this._data); //buf.readUInt32LE()
    const char = character.getCharacterData(this._session.character, false);
    const smbuf = SmartBuffer.fromBuffer(char);
    smbuf
      .writeUInt16LE(10003)
      .writeBigUInt64LE(BigInt(0))
      .writeFloatLE(10444.9951)
      .writeFloatLE(10179.7461)
      .writeFloatLE(100.325394)
      .writeFloatLE(0)
      .writeFloatLE(0);
    this._session.getClient(packetHandler.encrypt({ opcode: opCode.character.ServerResCharacterInfo, data: char }));
  }

  sendServerSpritWorker() {
    const buf = new SmartBuffer()
      /*     .writeUInt32LE(0)
      .writeUInt8(1)
      .writeUInt16LE(10003)
      .writeUInt16LE(101)
      .writeInt16LE(256)
      .writeUInt16LE(10003)
      .writeUInt16LE(256)
      .writeFloatLE(0)
      .writeFloatLE(0)
      .writeFloatLE(100)
      .writeFloatLE(0)
      .writeUInt32LE(0)
      .writeUInt8(0)*/
      .writeUInt32LE(0)
      .writeInt8(1) //YES
      .writeUInt32LE(10003) //LOC
      .writeUInt16LE(0) //0
      .writeFloatLE(0) //X
      .writeFloatLE(0) //Y
      .writeFloatLE(0) //Z
      .writeFloatLE(0) //ROT
      .writeFloatLE(0)
      .writeFloatLE(0)
      .toBuffer();
    this._session.getClient().write(packetHandler.encrypt({ opcode: "0x0322", data: buf }), () => {
      console.log("클라이언트 sendServerSpritworker!");
    });
  }

  sendServerUnknown1() {
    const res = new SmartBuffer()
      .writeUInt32LE(this._session.getAccountKey())
      .writeUInt8(1)
      .writeUInt16LE(10003)
      .writeBigUInt64LE(BigInt(0))
      .writeFloatLE(10444.9951)
      .writeFloatLE(10179.7461)
      .writeFloatLE(100.325394)
      .writeUInt8(0)
      .writeUInt32LE(0);
    this._session.getClient().write(
      packetHandler.encrypt({
        opcode: "0x0322",
        data: res.toBuffer(),
      })
    );
  }

  sendServerVersion(cb) {
    this._session.getClient().write(
      packetHandler.encrypt({
        opcode: "0x0404", ///0x0404 0x0656
        data: new SmartBuffer() /*
          .writeUInt32LE(16777221)
          .writeUInt32LE(352324352)
          .writeUInt32LE(0)
          .writeUInt32LE(150994944)
          .writeUInt32LE(1628151392)
          .writeUInt16LE(12657)*/

          /*.writeUInt32LE(0)
          .writeUInt32LE(1)
          .writeUInt32LE(0x0322)
          .writeUInt32LE(0x3bbb)*/
          .writeInt32LE(0)
          .writeInt32LE(0)
          .writeInt32LE(0)
          .writeInt32LE(0)
          .toBuffer(),
      }),
      () => {
        cb();
      }
    );
  }

  sendTimestamp(cb) {
    const date = new Date();
    const unixTime = BigInt(Math.floor(+date / 1000));
    const time = new SmartBuffer()
      .writeBigInt64LE(unixTime)
      .writeUInt16LE(date.getFullYear())
      .writeUInt16LE(date.getMonth() + 1)
      .writeUInt16LE(date.getDate())
      .writeUInt16LE(date.getHours())
      .writeUInt16LE(date.getMinutes())
      .writeUInt16LE(date.getSeconds())
      .writeUInt16LE(0);

    const encrypt = packetHandler.encrypt({ opcode: opCode.misc.ServerResCurrentDate, data: time.toBuffer() });
    this._session.getClient().write(encrypt, () => {
      cb();
    });
  }

  execute(opcode, data, loop = false) {
    this._opcode = opcode;
    this._data = data;

    switch (this._opcode) {
      case opCode.server.ClientReqWorldServerConnection:
        this.handleClientEnterGameServer();
        break;
      case opCode.character.ClientReqCharacterInfo:
        this.handleCharacterInfo();
        //this.handleGoCharacterInfo();
        break;
      case "0x0347":
        this._session.getClient().write(packetHandler.encrypt({ opcode: "0x0347", data: Buffer.from("01000000010f000000a041", "hex") }));
        break;
      case "0x0106":
        //this._session.getClient().write();
        break;
      /*case "0x0347":
        this._session
          .getClient()
          .write(
            Buffer.from(
              "0200480001637c0e233f0b6a3b0b603b4b203f0b603bcb20310b603bcb20360b603b1b21350b603b4b202e0b603b53221a0b603bab20080b603bab210e0b603bc3220d0b603bab22",
              "hex"
            )
          );
        break;
      case "0x0106":
        this._session.getClient().write(Buffer.from("0200230001433a590a170be8280b6054f75d7d9551394de03fc322fbf453faf7d7e2ca", "hex"));
        break;*/
      default:
        //     if (!loop) return this.execute(opcode, data, true);
        console.error("모르는거!", this._opcode, this._data.toString("hex"));
        break;
    }
  }
}
module.exports = GameHandler;
